server:
    port: 8002
spring:
    application:
        name: order-service
    jpa:
        database: postgresql
        hibernate:
            ddl-auto: update
        show-sql: false
        properties:
            hibernate.format_sql: false
    datasource:
        password: ${DATABASE_PASSWORD}
        driver-class-name: org.postgresql.Driver
        username: ${DATABASE_USERNAME}
        url: ${DATABASE_URL}/${DATABASE_NAME}
    kafka:
        bootstrap-servers: ${KAFKA_SERVER_HOSTNAME}:${KAFKA_SERVER_PORT}
        template:
            default-topic: orderTopic
        producer:
            group-id: orderEventId
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
            properties:
                spring:
                    json:
                        type:
                            mapping: event:com.praveenukkoji.orderservice.kafka.event.OrderEvent
    config:
        import: optional:configserver:http://${CONFIG_SERVER_HOSTNAME}:${CONFIG_SERVER_PORT}/
eureka:
    client:
        serviceUrl:
            defaultZone: http://${EUREKA_SERVER_HOSTNAME}:${EUREKA_SERVER_PORT}/eureka
feign:
    client:
        config:
            productservice:
                url: http://${PRODUCT_SERVICE_HOSTNAME}:${PRODUCT_SERVICE_PORT}/api/v1/products
management:
    endpoints:
        web:
            exposure:
                include: "*"
    health:
        readiness-state:
            enabled: true
        liveness-state:
            enabled: true
    endpoint:
        health:
            probes:
                enabled: true